name: Deploy to GAE

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        default: "warning"
      tags:
        description: "Test scenario tags"

env:
  V1: $V1
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  REDIS_URI: ${{ secrets.REDIS_URI }}
  PUBSUB_SECRET: ${{ secrets.PUBSUB_SECRET }}
  PUBSUB_URL: ${{ secrets.PUBSUB_URL }}
  TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
  TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Test
        run: go test ./...

  deploy:
    name: Deploy to GAE
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Inject Env
        run: |
          envsubst < app.yml.template > app.yml
          ls

      - id: deploy
        uses: GoogleCloudPlatform/github-actions/appengine-deploy@master
        with:
          credentials: ${{ secrets.gcp_credentials }}
          deliverables: app.yml

      - id: test
        run: curl "${{ steps.deploy.outputs.url }}"
